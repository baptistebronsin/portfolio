---
// src/layouts/BaseLayout.astro
import Footer from "@/components/elements/footer";
import Navbar from "@/components/elements/navbar";
import config from "../../../portfolio.config";
import "../../assets/css/global.css";

const {
  title = config.meta.title,
  description = config.meta.description,
  thumbnail = config.meta.thumbnail,
  ogType = "website"
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta name="image" content={thumbnail.image} />

    <meta property="og:title" content={title} />
    <meta property="og:type" content={ogType} />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={thumbnail.image} />
    <meta property="og:image:alt" content={thumbnail.alt} />
    <meta property="og:image:width" content={thumbnail.width} />
    <meta property="og:image:height" content={thumbnail.height} />
  </head>
  <script>
    let copyButtonLabel = "Copy Code";
    let codeBlocks = Array.from(document.querySelectorAll("pre"));
  
    for (let codeBlock of codeBlocks) {
      let wrapper = document.createElement("div");
      wrapper.style.position = "relative";
  
      let copyButton = document.createElement("button");
      copyButton.className = "copy-code";
      copyButton.innerHTML = copyButtonLabel;
  
      codeBlock.setAttribute("tabindex", "0");
      codeBlock.appendChild(copyButton);
      // wrap codebock with relative parent element
      codeBlock.parentNode!.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);
  
      copyButton.addEventListener("click", async () => {
        await copyCode(codeBlock, copyButton);
      });
    }
  
    async function copyCode(block: any, button: any) {
      let code = block.querySelector("code");
      let text = code.innerText;
  
      await navigator.clipboard.writeText(text);
  
      // visual feedback that task is completed
      button.innerText = "Code Copied";
  
      setTimeout(() => {
        button.innerText = copyButtonLabel;
      }, 700);
    }
  </script>
  <body class="relative min-h-screen border border-[#000000]/0">
    <div class="min-h-screen flex flex-col">
      <Navbar client:only />
      <slot />
      <Footer client:only />
    </div>
  </body>
</html>