[["Map",1,2,9,10,123,124],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.5.5","content-config-digest","5a86154b8dae28c7","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"mermaid\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{\"light\":\"github-light\",\"dark\":\"catppuccin-frappe\"},\"wrap\":false,\"transformers\":[{\"name\":\"@shikijs/transformers:notation-diff\"},{\"name\":\"@shikijs/transformers:notation-highlight\"},{\"name\":\"@shikijs/transformers:notation-highlight-word\"},{\"name\":\"@shikijs/transformers:notation-focus\"},{\"name\":\"@shikijs/transformers:notation-error-level\"},{\"name\":\"@shikijs/transformers:meta-highlight\"}]},\"remarkPlugins\":[null,null],\"rehypePlugins\":[null,[null,{\"customClassNames\":{\"calloutClass\":\"callout\",\"calloutTitleClass\":\"callout-title\",\"calloutContentClass\":\"callout-content\"}}],null,null],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","project",["Map",11,12,62,63,78,79,97,98,111,112],"beep",{"id":11,"data":13,"body":59,"filePath":60,"digest":61,"deferredRender":58},{"title":14,"description":15,"permalink":11,"logo":16,"contributors":17,"publishedAt":33,"tags":34,"links":52,"status":55,"type":56,"license":57,"isAvailable":58,"isDisplayedOnHomepage":58},"Beep","Beep is a web application that aims to implement the same functionalities as the Discord platform. This project is being developed by the entire DevOps class of 2023-2026 at Polytech Montpellier.","/images/project/beep/logo.png",[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"baptiste_bronsin","dorian_grasset","duratm","hugo_ponthieu","nathael_bonnal","nayrode","isalyne_llinares","giada_de_martino","poptart_coral","razano","benoit_planche","courtcircuits","stheoulle","theotchlx","thomas_broine",["Date","2025-04-30T00:00:00.000Z"],[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"web","react","typescript","tailwindcss","adonisjs","postgresql","minio","redis","keycloak","docker","kubernetes","gitlab ci","argocd","helm","grafana","prometheus","loki",{"website":53,"github":54},"https://beep.ovh","https://github.com/DO-2K23-26/beep-front","active","university","AGPL-3.0",true,"# A Discord Alternative by DevOps Students\n\nThe Polytech Montpellier DevOps class of 2023-2026 has a \"fil rouge\" project named **Beep**. This project aims to create a web application that replicates the functionalities of [the Discord platform](https://discord.com/).\n\n\u003Cdiv className='flex justify-center items-center'>\n  \u003Cimg src=\"https://upload.wikimedia.org/wikipedia/fr/4/4f/Discord_Logo_sans_texte.svg\" alt=\"Discord logo\" width={100} />\n\u003C/div>\n\n## Overview\n\nBeep is designed to offer a comprehensive communication platform for communities, friends, and professionals. It provides a seamless and integrated user experience with a focus on real-time communication and collaboration.\n\n## Functionalities\n\nLike Discord, Beep allows users to:\n\n- Create and manage servers (both private and public)\n- Send and receive messages in real-time (text and file sharing)\n- Join and participate in voice channels\n- Customize user profiles and server settings\n\nThe project leverages modern web technologies to ensure performance, scalability, and a responsive design:\n\n- **Frontend:** React, TypeScript, and TailwindCSS\n- **Backend:** AdonisJS with PostgreSQL\n\n## Interface\n\n### User Authentication\n\nBeep offers a user-friendly authentication process, including traditional login/signup methods and QR code authentication for enhanced user convenience.\n\n\u003Cimg src=\"/images/project/beep/login-page.png\" alt=\"Beep login page\" />\n\n### User Dashboard\n\nOnce logged in, users are greeted with an intuitive interface:\n\n- **Left Sidebar:** Displays the servers the user is part of.\n- **Main Area:** Shows the messages exchanged in the current channel.\n- **Right Sidebar:** Lists the channels available in the selected server.\n\n\u003Cimg src=\"/images/project/beep/server-page.png\" alt=\"Beep home page\" />\n\n## Team Work\n\nThe Beep project is developed using an Agile methodology, with the project fragmented into sprint periods. Each sprint focuses on specific features and improvements, ensuring continuous progress and regular updates.\n\n### Team Structure\n\nAt the beginning of the project, the class was divided into several teams, each responsible for different aspects of the application:\n| Message Team | File Team | Voice Team |\n|--------------|-----------|------------|\n| 5 students | 5 students | 5 students |\n| Responsible for developing the messaging functionalities, including sending and receiving text messages in real time. | Responsible for developing the file sharing functionalities, allowing users to upload and download files in channels. | Responsible for developing the voice channel functionalities, enabling users to communicate via voice in real time. |\n\nAfter this short period, the teams were reorganized to focus on the integration of all functionalities into a single cohesive application. We created Gitlab issues to track the progress of each feature and ensure that all teams were aligned with the overall project goals. Each issues had a status:\n| Status | Description |\n|--------|-------------|\n| To Develop | The feature needs to be developed by the team. |\n| To Accept | The issue has been described and needs to be accepted by the team before development begins. |\n| Ready | The feature is ready to be developed by the team. |\n| In Progress (WIP) | The feature is currently being developed by the team. |\n| In Review | The feature has been implemented and is awaiting review by the team. |\n| Done | The feature has been successfully implemented and is ready for deployment. |\n\nWhen a feature is in the 'In Review' status, it requires two approvals from team members before it can be marked as 'Done' and merged. To facilitate this process, a team member created a Discord bot that assigns reviewers. If a reviewer does not accept the task within five minutes, the bot automatically selects another student to conduct the review.\n\n## Architecture\n\nThe architecture of Beep is designed to be scalable, maintainable, and robust. Key components include:\n\n- **Containerization:** Docker\n- **Orchestration:** Kubernetes\n- **CI/CD Pipeline:** GitLab CI\n- **Deployments:** ArgoCD\n- **Monitoring and Logging:** Grafana, Prometheus, and Loki\n\nThis setup ensures that Beep can handle a large number of users and provide a reliable service with minimal downtime.\n\n## Future Enhancements\n\nOur roadmap for Beep includes several exciting features and improvements:\n\n- **Bot Integration:** Allowing users to create and integrate bots for various functionalities.\n- **Enhanced Security:** Implementing advanced security measures to protect user data.\n- **Mobile App:** Developing a mobile application for on-the-go access.\n\n## Conclusion\n\nBeep is more than just a project; it's a testament to the skills and dedication of the Polytech Montpellier DevOps class of 2023-2026. We are excited to continue developing this platform and look forward to the positive impact it will have on communication and collaboration.","src/content/projects/beep.mdx","4b734beaaa95dc33","operator-price",{"id":62,"data":64,"body":75,"filePath":76,"digest":77,"deferredRender":58},{"title":65,"description":66,"permalink":62,"contributors":67,"publishedAt":68,"links":69,"status":72,"type":73,"license":57,"isAvailable":74,"isDisplayedOnHomepage":74},"Operator Price","Operator price tells a user whether it's better to buy a smartphone with or without a phone operator.",[18],["Date","2023-04-27T00:00:00.000Z"],{"website":70,"gitlab":71},"https://prix-operateur.baptistebronsin.be/","https://gitlab.com/baptiste.bronsin/prix_operateur.git","archived","personnal",false,"# Welcome to Explainer\n\nExplainer is a documentation boilerplate designed to help you create beautiful, responsive, and accessible web documentation using [Astro](https://astro.build). This project combines the power of Astro with [Tailwind CSS](https://tailwindcss.com) and [TypeScript](https://www.typescriptlang.org) to provide a smooth development experience.\n\n## Why Explainer?\n\nDocumentation is often overlooked, but it's essential for the adoption and effective use of your project.\nExplainer fills an important gap in the technical documentation ecosystem. While Vue has robust solutions like Vitepress, the React ecosystem suffers from a lack of alternatives that don't depend on Next.js. Most documentation frameworks for React are closely tied to Next.js, which can be limiting for many projects.\n\nThis is where Astro, and by extension Explainer, particularly shines. Astro offers remarkable flexibility by allowing you to integrate any technological component related to your business. You can easily incorporate React, Vue, Svelte components, or even standard web elements according to your specific needs.\n\nThis agnostic approach allows you to create documentation that perfectly aligns with your existing technology stack, without forcing you to adopt a particular ecosystem. Whether you work with React, Vue, or other frameworks, Explainer adapts to your needs rather than the other way around.","src/content/projects/operator-price.mdx","ba5fdcca74713fcc","plannify",{"id":78,"data":80,"body":94,"filePath":95,"digest":96,"deferredRender":58},{"title":81,"description":82,"permalink":78,"logo":83,"contributors":84,"publishedAt":85,"tags":86,"links":91,"status":55,"type":73,"license":57,"isAvailable":58,"isDisplayedOnHomepage":58},"Plannify","Plannify is a web application that allows truck drivers to enter their days and generate personalized reports. It will also aim to provide a connection with the employer to facilitate the management of working hours, tournees, and more.","/images/project/plannify/logo.png",[18],["Date","2025-06-03T00:00:00.000Z"],[35,36,37,38,87,88,40,41,44,45,89,46,47,48,90],"nestjs","prisma","mail server","cronjob",{"website":92,"gitlab":93},"https://app.plannify.be","https://gitlab.com/plannify-group","# A truck driver application\n\nPlannify is a web application designed specifically for truck drivers, enabling them to log their daily activities and generate personalized reports. The platform also aims to facilitate communication with employers, streamlining the management of working hours, routes, and other essential tasks.\n\n## Why is it a personal project ?\n\nWhen I was in my second year of university, my father asked me to print blank papers with a specific format for his truck driver activities. As a programmer, I thought it would be more efficient to create a web application that could generate these reports automatically. This idea led to the development of Plannify, which has since evolved into a comprehensive tool for truck drivers.\n\nToday, Plannify has daily users and is actively used by my father and his colleagues. The application continues to grow, with plans to add more features and improve the user experience.\n\n## Features\n\nThe main features of Plannify include:\n- **Daily Activity Logging**: Truck drivers can easily enter their daily activities, including working hours, rest periods and overnight stays.\n  | Attribute | Type | Description |\n  |-----------|------|-------------|\n  | `date`    | date | The date of the day |\n  | `startTime` | hour | The start time of the day |\n  | `endTime` | hour or undefined | The end time of the day |\n  | `restTime` | hour | The total rest time taken during the day |\n  | `overnightStay` | boolean | Indicates whether the driver stayed overnight |\n\n- **Report Generation**: Users can generate monthly reports based on their logged activities, which can be exported in PDF format.\n- **Employer Connection** (_currently in development_): The application aims to provide a connection with employers, allowing them to manage working hours, routes, and other relevant information more efficiently.\n- **User-Friendly Application**: Plannify is designed to be intuitive and easy to use, ensuring that truck drivers can quickly log their activities without any hassle. And I think human must be at the center of the application, so I try to make it as simple as possible without hidding weird behaviors.\n\n## Technologies Used\n\nPlannify is built using modern web technologies, including:\n- **Frontend**: React, TypeScript, and TailwindCSS for a responsive and user-friendly interface.\n- **Backend**: NestJS with Prisma and PostgreSQL for robust data management and server-side logic.\n- **File Storage**: MinIO for secure file storage and management.\n- **Containerization**: Docker for easy deployment and scalability.\n- **Orchestration**: Kubernetes for managing containerized applications and ensuring high availability.\n- **CI/CD**: GitLab CI for continuous integration and deployment, ensuring that updates are rolled out smoothly.\n- **Monitoring**: Argocd and Helm for managing deployments and scheduled tasks.\n- **Email Notifications**: A mail server for sending notifications and updates to users.\n- **Cron Jobs**: Scheduled tasks for automated report generation, account management and other periodic activities.\n\n\u003Cdiv className='grid grid-rows-2 grid-cols-2 sm:grid-rows-1 sm:grid-cols-4 gap-4 w-full'>\n  \u003Cimg src=\"/images/project/plannify/dashboard-1.png\" alt=\"Plannify home dashboard\" />\n  \u003Cimg src=\"/images/project/plannify/dashboard-2.png\" alt=\"Plannify workday dashboard\" />\n  \u003Cimg src=\"/images/project/plannify/dashboard-3.png\" alt=\"Plannify reports dashboard\" />\n  \u003Cimg src=\"/images/project/plannify/dashboard-4.png\" alt=\"Plannify account dashboard\" />\n\u003C/div>\n\nI also used the PWA (Progressive Web App) features to allow users to install the application on their devices and use it as a native mobile application.\n\n## Automation and Deployment\n\n### Environments\n\nI have set up multiple environments for Plannify to ensure smooth development, testing, and production processes:\n- **Staging**: A staging environment for testing new features and updates before they go live.\n- **Production**: The live environment where users access the application.\n\n### CI\n\nPlannify uses GitLab CI for continuous integration, ensuring that code changes are automatically tested and deployed. \n\nFor the frontend, I have a pipeline that checks the code quality (linting), builds the application and stores the build artifacts in the GitLab registry. For the backend, like the frontend, I have the same pipeline and I also run the tests to ensure that everything is working as expected.\n\n\u003Cdiv>\n  \u003Cimg className='max-w-[100%] object-contain' src=\"/images/project/plannify/backend-pipeline.png\" alt=\"Plannify backend pipeline\" />\n\u003C/div>\n\n### CD\n\nFor continuous deployment, I use ArgoCD to manage the deployment of the application to the staging and production environments. This allows for automated rollouts and rollbacks, ensuring that updates are deployed smoothly without downtime. Thats allows me to pratice the GitOps principles.\n\n\u003Cdiv>\n  \u003Cimg className='max-w-[100%] object-contain' src=\"/images/project/plannify/argocd.png\" alt=\"Plannify argocd operator\" />\n\u003C/div>\n\n### Helm\n\nI use Helm to manage the Kubernetes deployments of Plannify. Helm charts allow me to define, install, and upgrade the application in a consistent manner across different environments. This simplifies the deployment process and ensures that all dependencies are managed effectively.\n\n## Automations\n\n### Sending Reports\n\nI have implemented a kubernetes cron job to automate the generation and sending of reports. This job runs at the beginning of each month, generating reports for users who agreed to receive them. The reports are then sent via email, ensuring that users have access to their activity summaries without needing to manually generate them.\n\n### Account Management\n\nI have also set up a cron job to manage user accounts. This job runs daily and delete accounts that have not been logged into for more than 6 months. This helps maintain the application's performance and ensures that user data is managed responsibly.\n\n### Backups\n\nData backups are crucial for any application, and Plannify is no exception. I have implemented a backup strategy that includes:\n- **Database Backups**: Regular backups of the PostgreSQL database to ensure that user data is safe and can be restored in case of any issues.\n- **File Storage Backups**: Backups of files stored in MinIO to prevent data loss in case of hardware failures or other issues.\n\nEach backup is stored securely in a separate location to ensure data integrity and availability. I also have a cron job that runs daily to create these backups, ensuring that the application can recover quickly in case of any unexpected events.\n\n## Future Plans\n\nI want to continue improving Plannify and add a link between employers and employees. This will allow a better visibility for truck drivers and their daily activities, and will also help employers manage their workforce more effectively.\n\nI also plan to continue offering the application for free and without any ads, as I believe it's important to provide a valuable tool for truck drivers without any financial barriers.\n\n## Conclusion\n\nPlannify is my main personal project, and I'm proud of the progress it has made since its inception. The application has evolved from a simple idea into a comprehensive tool that is actively used by truck drivers. I'm excited about the future of Plannify and the potential it has to make a positive impact on the lives of truck drivers.","src/content/projects/plannify.mdx","2056a9109aac339f","polyclount",{"id":97,"data":99,"body":75,"filePath":109,"digest":110,"deferredRender":58},{"title":100,"description":101,"permalink":102,"logo":103,"contributors":104,"publishedAt":105,"links":106,"status":72,"type":73,"license":57,"isAvailable":74,"isDisplayedOnHomepage":74},"Polycount","Polycount is my first Javascript web application. It allows users to assign expenses to group activities (like Tricount).","polycount","/images/project/polycount.png",[18],["Date","2025-01-01T00:00:00.000Z"],{"website":107,"gitlab":108},"https://polycount.baptistebronsin.be","https://gitlab.com/baptiste.bronsin/polycount","src/content/projects/polyclount.mdx","b39934897d3ef88f","portfolio",{"id":111,"data":113,"body":75,"filePath":121,"digest":122,"deferredRender":58},{"title":114,"description":115,"permalink":111,"contributors":116,"publishedAt":117,"links":118,"status":55,"type":73,"license":57,"isAvailable":74,"isDisplayedOnHomepage":74},"Portfolio","The Portfolio project is the website you are currently visiting. It is a personal project that I developed to present my career and my projects.",[18],["Date","2025-01-01T00:00:00.000Z"],{"website":119,"github":120},"https://baptistebronsin.be","https://github.com/baptistebronsin/portfolio.git","src/content/projects/portfolio.mdx","56d60cd5676b6fc8","article",["Map",125,126,135,136,144,145,154,155],"a-mail-server-in-a-kubernetes-cluster",{"id":125,"data":127,"body":75,"filePath":133,"digest":134,"deferredRender":58},{"title":128,"description":129,"permalink":125,"thumbnail":130,"authors":131,"publishedAt":132,"isAvailable":74,"isDisplayedOnHomepage":58},"A mail server in a kubernetes cluster","You maybe know postfix mail server, but do you know how to run it in a kubernetes cluster ? This article will show you how to run a mail server in a kubernetes cluster.","https://placehold.co/1200x630",[18],["Date","2030-01-01T00:00:00.000Z"],"src/content/articles/a-mail-server-in-a-kubernetes-cluster.mdx","bc7226769b4676f9","how-i-configured-my-own-home-server",{"id":135,"data":137,"body":75,"filePath":142,"digest":143,"deferredRender":58},{"title":138,"description":139,"permalink":135,"thumbnail":130,"authors":140,"publishedAt":141,"isAvailable":74,"isDisplayedOnHomepage":58},"How I configured my own home server ?","A personnal home server is a great way to learn about server administration, networking and security. In this article, I will show you how I configured my own home server to host my personal projects and services.",[18],["Date","2030-01-01T00:00:00.000Z"],"src/content/articles/how-i-configured-my-own-home-server.mdx","b3d96859557c4c71","how-to-avoid-too-many-a-and-aaaa-dns-records-in-your-dns-zone-file",{"id":144,"data":146,"body":75,"filePath":152,"digest":153,"deferredRender":58},{"title":147,"description":148,"permalink":144,"thumbnail":149,"authors":150,"publishedAt":151,"isAvailable":74,"isDisplayedOnHomepage":58},"How to avoid too many A and AAAA DNS records in your DNS zone file ?","Managing numerous A and AAAA records in your DNS zone file can become cumbersome, especially when updating public IP addresses. This article explores using CNAME records as a more efficient alternative to simplify DNS management.","/images/articles/dns-records.png",[18],["Date","2030-01-01T00:00:00.000Z"],"src/content/articles/how-to-avoid-too-many-a-and-aaaa-dns-records-in-your-dns-zone-file.mdx","94329b42791aaada","welcome",{"id":154,"data":156,"body":75,"filePath":161,"digest":162,"deferredRender":58},{"title":157,"description":158,"permalink":154,"thumbnail":130,"authors":159,"publishedAt":160,"isAvailable":74,"isDisplayedOnHomepage":74},"Discover Explainer","Discover Explainer is a tool that helps you create beautiful, responsive, and accessible web documentation using Astro. It's built with Astro, Tailwind CSS, and TypeScript.",[18],["Date","2030-01-01T00:00:00.000Z"],"src/content/articles/welcome.mdx","8a013229fcf9e392"]